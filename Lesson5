#На примере этого кода делаем все таблицы, я не стала грузить код для каждого файла, тк они различаются только набором и названием таблиц, но создала ETL по всем.
#Так же в файле nation.csv пример как это выглядит и приложила скриншот со всеми файлами, что они были прописаны и созданы.
#Выложила юпитер ноутбук less5 

import psycopg2

conn_string= "host='localhost' port=54320 dbname='my_database' user='root' password='postgres'" 

with psycopg2.connect(conn_string) as conn, conn.cursor() as cursor:
    query = 'select * from NATION limit 2' 
    cursor.execute(query) 
    result = cursor.fetchone() 
    print(result)
    
import psycopg2

conn_string= "host='localhost' port=54320 dbname='my_database' user='root' password='postgres'" 

with psycopg2.connect(conn_string) as conn, conn.cursor() as cursor:
    row = (-999, 'name', 0, 'comment') # кортеж для вставки
    insert = """
    insert into NATION  (
           N_NATIONKEY   
         , N_NAME       
         , N_REGIONKEY   
         , N_COMMENT 
    )
    values
    ({values})
    """.format(
    # биндим параметры в строку, чтобы избежать sql-иньекций (best practice)
    values=cursor.mogrify("%s, %s, %s, %s", row).decode('utf-8')
    )
    print('sql запрос:', insert)
    cursor.execute(insert)
    conn.commit() # комитим транзакцию
    cursor.execute('select * from customer where c_custkey < 0')
    result = cursor.fetchall()
    print('результат вставки:', result)
    
  
import psycopg2

conn_string= "host='localhost' port=54320 dbname='my_database' user='root' password='postgres'" 
with psycopg2.connect(conn_string) as conn, conn.cursor() as cursor:
    q = "COPY nation TO STDOUT WITH DELIMITER ',' CSV HEADER;"
    with open('nation.csv', 'w') as f:
        cursor.copy_expert(q, f)
        
        
import pandas as pd
pd.read_csv('nation.csv')

import psycopg2

conn_string= "host='localhost' port=54320 dbname='my_database' user='root' password='postgres'" 
with psycopg2.connect(conn_string) as conn, conn.cursor() as cursor:
    q = "COPY nation from STDIN WITH DELIMITER ',' CSV HEADER;"
    with open('nation.csv', 'r') as f:
        cursor.copy_expert(q, f)
        
import psycopg2

conn_string= "host='localhost' port=54320 dbname='my_database' user='root' password='postgres'" 
with psycopg2.connect(conn_string) as conn, conn.cursor() as cursor:
    cursor.execute('select count(*) from nation')
    print(cursor.fetchall())
