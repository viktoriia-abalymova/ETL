{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "85d769d0",
   "metadata": {},
   "outputs": [],
   "source": [
    "import psycopg2\n",
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "ddd68dfe",
   "metadata": {},
   "outputs": [],
   "source": [
    "conn_string= \"host='localhost' port=54320 dbname='my_database' user='root' password='postgres'\" \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "d98a71ce",
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "with psycopg2.connect(conn_string) as conn, conn.cursor() as cursor:\n",
    "    q = \"COPY nation TO STDOUT WITH DELIMITER ',' CSV HEADER;\"\n",
    "    with open('nation.csv', 'w') as f:\n",
    "        cursor.copy_expert(q, f)\n",
    "        \n",
    "with psycopg2.connect(conn_string) as conn, conn.cursor() as cursor:\n",
    "    q = \"COPY region TO STDOUT WITH DELIMITER ',' CSV HEADER;\"\n",
    "    with open('region.csv', 'w') as f:\n",
    "        cursor.copy_expert(q, f)\n",
    "        \n",
    "with psycopg2.connect(conn_string) as conn, conn.cursor() as cursor:\n",
    "    q = \"COPY part TO STDOUT WITH DELIMITER ',' CSV HEADER;\"\n",
    "    with open('part.csv', 'w') as f:\n",
    "        cursor.copy_expert(q, f)        \n",
    "        \n",
    "        \n",
    "with psycopg2.connect(conn_string) as conn, conn.cursor() as cursor:\n",
    "    q = \"COPY suppliers TO STDOUT WITH DELIMITER ',' CSV HEADER;\"\n",
    "    with open('supplier.csv', 'w') as f:\n",
    "        cursor.copy_expert(q, f)       \n",
    "        \n",
    "with psycopg2.connect(conn_string) as conn, conn.cursor() as cursor:\n",
    "    q = \"COPY partsupp TO STDOUT WITH DELIMITER ',' CSV HEADER;\"\n",
    "    with open('partsupp.csv', 'w') as f:\n",
    "        cursor.copy_expert(q, f)        \n",
    "     \n",
    "        \n",
    "with psycopg2.connect(conn_string) as conn, conn.cursor() as cursor:\n",
    "    q = \"COPY customer TO STDOUT WITH DELIMITER ',' CSV HEADER;\"\n",
    "    with open('customer.csv', 'w') as f:\n",
    "        cursor.copy_expert(q, f)\n",
    "        \n",
    "with psycopg2.connect(conn_string) as conn, conn.cursor() as cursor:\n",
    "    q = \"COPY orders TO STDOUT WITH DELIMITER ',' CSV HEADER;\"\n",
    "    with open('orders.csv', 'w') as f:\n",
    "        cursor.copy_expert(q, f)\n",
    "        \n",
    "        \n",
    "with psycopg2.connect(conn_string) as conn, conn.cursor() as cursor:\n",
    "    q = \"COPY lineitem TO STDOUT WITH DELIMITER ',' CSV HEADER;\"\n",
    "    with open('lineitem.csv', 'w') as f:\n",
    "        cursor.copy_expert(q, f)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "b5a82606",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[(129,)]\n",
      "[(12,)]\n",
      "[(600002,)]\n",
      "[(30002,)]\n",
      "[(2400002,)]\n",
      "[(600003,)]\n",
      "[(6000002,)]\n",
      "[(24004866,)]\n"
     ]
    }
   ],
   "source": [
    "with psycopg2.connect(conn_string) as conn, conn.cursor() as cursor:\n",
    "    cursor.execute('select count(*) from nation')\n",
    "    print(cursor.fetchall())\n",
    "    \n",
    "    \n",
    "with psycopg2.connect(conn_string) as conn, conn.cursor() as cursor:\n",
    "    cursor.execute('select count(*) from region')\n",
    "    print(cursor.fetchall())\n",
    "    \n",
    "    \n",
    "with psycopg2.connect(conn_string) as conn, conn.cursor() as cursor:\n",
    "    cursor.execute('select count(*) from part')\n",
    "    print(cursor.fetchall())\n",
    "    \n",
    "    \n",
    "with psycopg2.connect(conn_string) as conn, conn.cursor() as cursor:\n",
    "    cursor.execute('select count(*) from supplier')\n",
    "    print(cursor.fetchall())\n",
    "    \n",
    "    \n",
    "with psycopg2.connect(conn_string) as conn, conn.cursor() as cursor:\n",
    "    cursor.execute('select count(*) from partsupp')\n",
    "    print(cursor.fetchall())\n",
    "    \n",
    "    \n",
    "with psycopg2.connect(conn_string) as conn, conn.cursor() as cursor:\n",
    "    cursor.execute('select count(*) from customer')\n",
    "    print(cursor.fetchall())\n",
    "    \n",
    "with psycopg2.connect(conn_string) as conn, conn.cursor() as cursor:\n",
    "    cursor.execute('select count(*) from orders')\n",
    "    print(cursor.fetchall())\n",
    "    \n",
    "    \n",
    "with psycopg2.connect(conn_string) as conn, conn.cursor() as cursor:\n",
    "    cursor.execute('select count(*) from lineitem')\n",
    "    print(cursor.fetchall())\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4373c240",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
